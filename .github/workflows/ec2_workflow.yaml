name: Spring Boot CI

on:
  push:
    branches: ["master"]

jobs:
  build-and-test:
    # Run on current push version - test profile
    # H2-DB + Localhost?
    runs-on: ubuntu-latest
    steps:
      # step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Env config Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Step 3: Test
      - name: test
        env:
          SPRING_PROFILES_ACTIVE: test
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI_DEV: ${{ secrets.GOOGLE_REDIRECT_URI_DEV }}

        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production

    env:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST_URL: ${{ secrets.DB_HOST_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI_PROD: ${{ secrets.GOOGLE_REDIRECT_URI_PROD }}

      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}

      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      EC2_TARGET_FOLDER: ${{ secrets.EC2_TARGET_FOLDER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package -DskipTests

      # Step 4: Deploy using ssh & scp
      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          source: target/*.jar
          target: /home/ubuntu/focus_tracker_main_service/

      # Step 5: Restart using ssh - kill process and start new
      - name: Restart application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            fuser -k 8080/tcp || true
            cd /home/ubuntu/focus_tracker_main_service/target
            nohup setsid java -jar AI_habit_track-0.0.5-SNAPSHOT.jar --spring.profiles.active=prod > app-AI_habit_track-0.0.5-SNAPSHOT.log 2>&1 &